events {
  worker_connections  1024;
}

# Uncomment the line below for verbose log output
# error_log /var/log/nginx/error.log debug;

http {

  ldap_server ldapserver {
    url ldap://openldap/dc=mvp,dc=org?uid?sub?(objectClass=person);
    binddn "cn=admin,dc=mvp,dc=org";
    binddn_passwd admin;
    group_attribute member;
    group_attribute_is_dn on;
    require group 'cn=docker,ou=groups,dc=mvp,dc=org';
    require valid_user;
    satisfy all;
  }

  server {

    listen 8080;
    server_name _;

    # Allow NGINX to handle large file uploads
    client_max_body_size 50m;

    auth_ldap "Forbidden";
    auth_ldap_servers ldapserver;

    location  ^~ /jenkins/ {
      proxy_set_header    Host                $host:$server_port;
      proxy_set_header    X-Real-IP           $remote_addr;
      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header    Authorization       $http_authorization;
      proxy_set_header    X-Forwarded-User    $http_authorization;
      proxy_set_header    X-Forwarded-Server  $host;
      proxy_set_header    X-Forwarded-Proto   $scheme;
      proxy_pass          http://jenkins:8080/jenkins/;
    }

    location /gogs/ {
      proxy_set_header    Host                $host;
      proxy_set_header    X-Real-IP           $remote_addr;
      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
      proxy_set_header    X-Forwarded-Proto   $scheme;
      proxy_pass          http://gogs:3000/;
    }

    location /prometheus {
      proxy_pass          http://prometheus:9090;
    }

    location /grafana/ {
      proxy_pass          http://grafana:3000/;
    }
    
  }
}
